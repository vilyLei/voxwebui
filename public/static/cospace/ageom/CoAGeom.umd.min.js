(function(t,e){"object"===typeof exports&&"object"===typeof module?module.exports=e():"function"===typeof define&&define.amd?define([],e):"object"===typeof exports?exports["CoAGeom"]=e():t["CoAGeom"]=e()})("undefined"!==typeof self?self:this,(function(){return function(t){var e={};function s(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,s),r.l=!0,r.exports}return s.m=t,s.c=e,s.d=function(t,e,n){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},s.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"===typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)s.d(n,r,function(e){return t[e]}.bind(null,r));return n},s.n=function(t){var e=t&&t.__esModule?function(){return t["default"]}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s="fae3")}({1101:function(t,e,s){"use strict";var n;Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t["None"]=0]="None",t[t["Hit"]=1]="Hit",t[t["Contain"]=2]="Contain",t[t["parallel"]=3]="parallel",t[t["Inner"]=4]="Inner",t[t["Outer"]=5]="Outer",t[t["Positive"]=6]="Positive",t[t["Negative"]=7]="Negative"}(n||(n={})),e.Intersection=n},"1eb2":function(t,e,s){"use strict";if("undefined"!==typeof window){var n=window.document.currentScript,r=s("8875");n=r(),"currentScript"in document||Object.defineProperty(document,"currentScript",{get:r});var i=n&&n.src.match(/(.+\/)[^/]+\.js(\?.*)?$/);i&&(s.p=i[1])}},"33b5":function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});let n=null,r=null,i=null,o=null,c=null,a=null,u=null;function l(){null==n&&(n=CoMath.createVec3(),r=CoMath.createVec3(),i=CoMath.createVec3(),o=CoMath.createVec3(),c=CoMath.createVec3(),a=CoMath.createVec3(),u=CoMath.createVec3())}class d{static ClacTriNormal(t,e,s,n){l();const o=CoMath.Vector3D;o.Subtract(e,t,r),o.Subtract(s,e,i),o.Cross(r,i,n),n.normalize()}static ClacTriNormalByVS(t,e,s){l();let r=9*e;n.setTo(t[r],t[r+1],t[r+2]),s.setTo(t[r+3],t[r+4],t[r+5]),i.setTo(t[r+6],t[r+7],t[r+8]),s.subtractBy(n),i.subtractBy(n),s.crossBy(i),s.normalize()}static ClacTriNormalByIVS(t,e,s,r){l();let o=3*e,c=3*s[o];n.setTo(t[c],t[c+1],t[c+2]),c=3*s[o+1],r.setTo(t[c],t[c+1],t[c+2]),c=3*s[o+2],i.setTo(t[c],t[c+1],t[c+2]),r.subtractBy(n),i.subtractBy(n),r.crossBy(i),r.normalize()}static ClacTrisNormal(t,e,s,r,i){l();let o=d,c=CoMath.createVec3(),a=0,u=0,h=0;for(h=0;h<e;++h)i[h]=0;for(h=0;h<s;++h)o.ClacTriNormalByIVS(t,h,r,c),a=3*h,u=3*r[a],i[u]+=c.x,i[u+1]+=c.y,i[u+2]+=c.z,u=3*r[a+1],i[u]+=c.x,i[u+1]+=c.y,i[u+2]+=c.z,u=3*r[a+2],i[u]+=c.x,i[u+1]+=c.y,i[u+2]+=c.z;for(h=0;h<e;h+=3)n.setTo(i[h],i[h+1],i[h+2]),n.normalize(),i[h]=n.x,i[h+1]=n.y,i[h+2]=n.z}static ClacTriTangent(t,e,s,u,d,h,f){l();let y=3*u,p=3*d[y];n.setTo(s[p],s[p+1],s[p+2]),n.setTo(t[p],t[p+1],t[p+2]),p=3*d[y+1],r.setTo(t[p],t[p+1],t[p+2]),p=3*d[y+2],i.setTo(t[p],t[p+1],t[p+2]),p=2*d[y],o.setTo(e[p],e[p+1],0),p=2*d[y+1],c.setTo(e[p],e[p+1],0),p=2*d[y+2],a.setTo(e[p],e[p+1],0),r.subtractBy(n),i.subtractBy(n),c.subtractBy(o),a.subtractBy(o);let v=1/(c.x*a.y-c.y*a.x);h.copyFrom(r),h.scaleBy(a.y),n.copyFrom(i),n.scaleBy(c.y),h.subtractBy(n),h.scaleBy(v),h.normalize(),f.copyFrom(i),f.scaleBy(c.x),n.copyFrom(r),n.scaleBy(a.x),f.subtractBy(n),f.scaleBy(v),f.normalize()}static ClacTrisTangent(t,e,s,c,a,u,h,f){l();let y=d,p=CoMath.createVec3(),v=CoMath.createVec3(),m=0,x=0,P=0;for(P=0;P<e;++P)h[P]=0,f[P]=0;for(P=0;P<a;++P)y.ClacTriTangent(t,s,c,P,u,p,v),m=3*P,x=3*u[m],h[x]=p.x,h[x+1]=p.y,h[x+2]=p.z,f[x]=v.x,f[x+1]=v.y,f[x+2]=v.z,x=3*u[m+1],h[x]=p.x,h[x+1]=p.y,h[x+2]=p.z,f[x]=v.x,f[x+1]=v.y,f[x+2]=v.z,x=3*u[m+2],h[x]=p.x,h[x+1]=p.y,h[x+2]=p.z,f[x]=v.x,f[x+1]=v.y,f[x+2]=v.z;for(P=0;P<e;P+=3)o.setTo(h[P],h[P+1],h[P+2]),o.normalize(),r.setTo(f[P],f[P+1],f[P+2]),r.normalize(),i.setTo(c[P],c[P+1],c[P+2]),n.copyFrom(i),i.scaleBy(i.dot(o)),o.subtractBy(i),o.normalize(),i.setTo(c[P],c[P+1],c[P+2]),i.scaleBy(r.dot(i)),r.subtractBy(i),r.normalize(),n.crossBy(o),n.dot(r)<0&&o.scaleBy(-1),h[P]=o.x,h[P+1]=o.y,h[P+2]=o.z,r.setTo(c[P],c[P+1],c[P+2]),r.crossBy(o),r.normalize(),f[P]=r.x,f[P+1]=r.y,f[P+2]=r.z}}e.SurfaceNormal=d},"52c2":function(t,e,s){"use strict";var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const r=n(s("adad"));e.Line=r.default;const i=n(s("8708"));e.RayLine=i.default;const o=n(s("7574"));e.SegmentLine=o.default;const c=n(s("f8f1"));e.Plane=c.default;const a=n(s("9a29"));e.PlaneUtils=a.default;const u=n(s("c97d"));e.Sphere=u.default;const l=s("1101");e.Intersection=l.Intersection;const d=s("33b5");function h(){return new r.default}function f(){return new i.default}function y(){return new o.default}function p(){return new c.default}function v(){return new u.default}e.SurfaceNormal=d.SurfaceNormal,e.createLine=h,e.createRayLine=f,e.createSegmentLine=y,e.createPlane=p,e.createSphere=v},7574:function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});class n{constructor(){this.uid=-1,this.pos=CoMath.createVec3(),this.begin=CoMath.createVec3(),this.end=CoMath.createVec3(0),this.tv=CoMath.createVec3(1),this.length=0,this.radius=0}setTo(t,e){return this.begin.copyFrom(t),this.end.copyFrom(e),this}reset(){this.pos.setXYZ(0,0,0),this.begin.setXYZ(0,0,0),this.end.setXYZ(0,0,0),this.tv.setXYZ(1,0,0),this.length=0,this.radius=0}update(){this.tv.subVecsTo(this.end,this.begin),this.length=this.tv.getLength(),this.radius=.5*this.length,this.tv.normalize(),this.pos.copyFrom(this.tv).scaleBy(this.radius).addBy(this.pos)}}e.default=n},8708:function(t,e,s){"use strict";var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const r=n(s("adad")),i=s("cbf6");let o=null,c=null;function a(){null==o&&(o=CoMath.createVec3(),c=CoMath.createVec3())}class u extends r.default{static IntersectSegmentLine(t,e,s,n,r,i=1){a();let u=o;if(u.copyFrom(n).subtractBy(s).normalize(),CoMath.Vector3D.Cross(e,u,r),r.normalize(),u.w=r.dot(t)-r.dot(n),Math.abs(u.w)<=i){r.crossBy(e),r.normalize(),r.w=r.dot(t),u.w=(r.w-r.dot(s))/u.dot(r),r.copyFrom(u).scaleBy(u.w).addBy(s),u.copyFrom(r).subtractBy(s);const i=c;return i.copyFrom(r).subtractBy(n),r.w=1,u.dot(i)<=0}return!1}static IntersectSphereNearPos(t,e,s,n,r){a();let c=o;if(c.x=s.x-t.x,c.y=s.y-t.y,c.z=s.z-t.z,c.w=c.dot(e),n*=n,i.isGreaterPositiveZero(c.w)){if(r.copyFrom(e),r.scaleBy(c.w),r.subtractBy(c),c.x=r.getLengthSquared(),c.x<=n)return c.w-=Math.sqrt(n-c.x),r.copyFrom(e),r.scaleBy(c.w),r.addBy(t),r.w=1,!0}else if(c.getLengthSquared()<=n&&(r.copyFrom(e),r.scaleBy(c.w),r.subtractBy(c),c.x=r.getLengthSquared(),c.x<=n))return c.w+=Math.sqrt(n-c.x),r.copyFrom(e),r.scaleBy(c.w),r.addBy(t),r.w=1,!0;return!1}static IntersectSphere(t,e,s,n){a();let r=o;return r.x=s.x-t.x,r.y=s.y-t.y,r.z=s.z-t.z,r.w=r.dot(e),i.isLessPositiveZero(r.w)||(r.x-=r.w*e.x,r.y-=r.w*e.y,r.z-=r.w*e.z),r.getLengthSquared()<=n*n}}e.default=u},8875:function(t,e,s){var n,r,i;(function(s,o){r=[],n=o,i="function"===typeof n?n.apply(e,r):n,void 0===i||(t.exports=i)})("undefined"!==typeof self&&self,(function(){function t(){var e=Object.getOwnPropertyDescriptor(document,"currentScript");if(!e&&"currentScript"in document&&document.currentScript)return document.currentScript;if(e&&e.get!==t&&document.currentScript)return document.currentScript;try{throw new Error}catch(f){var s,n,r,i=/.*at [^(]*\((.*):(.+):(.+)\)$/gi,o=/@([^@]*):(\d+):(\d+)\s*$/gi,c=i.exec(f.stack)||o.exec(f.stack),a=c&&c[1]||!1,u=c&&c[2]||!1,l=document.location.href.replace(document.location.hash,""),d=document.getElementsByTagName("script");a===l&&(s=document.documentElement.outerHTML,n=new RegExp("(?:[^\\n]+?\\n){0,"+(u-2)+"}[^<]*<script>([\\d\\D]*?)<\\/script>[\\d\\D]*","i"),r=s.replace(n,"$1").trim());for(var h=0;h<d.length;h++){if("interactive"===d[h].readyState)return d[h];if(d[h].src===a)return d[h];if(a===l&&d[h].innerHTML&&d[h].innerHTML.trim()===r)return d[h]}return null}}return t}))},"9a29":function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n=s("1101"),r=s("cbf6");class i{static CalcPVCloseV(t,e,s,n){let r=e-s.dot(t);n.setTo(r*t.x,r*t.y,r*t.z),n.addBy(s)}static IntersectLinePos2(t,e,s,o,c){i.Intersection=n.Intersection.None;let a=t.dot(o);if(r.isNotZero(a)){let r=t.dot(s)-e;return c.x=1e5*o.x+s.x,c.y=1e5*o.y+s.y,c.z=1e5*o.z+s.z,a=t.dot(c)-e,a=r/(r-a),c.subtractBy(s),c.scaleBy(a),c.addBy(s),i.Intersection=n.Intersection.Hit,!0}return a=t.dot(s)-e,r.isZero(a)?(c.copyFrom(s),i.Intersection=n.Intersection.Contain,!0):(i.Intersection=n.Intersection.parallel,!1)}static IntersectRayLinePos2(t,e,s,o,c){let a;i.Intersection=n.Intersection.None;let u=t.dot(s)-e;if(r.isGreaterPositiveZero(u)){if(a=t.dot(o),a<0)return i.IntersectLinePos2(t,e,s,o,c)}else{if(!r.isLessNegativeZero(u))return a=t.dot(o),r.isNotZero(a)?(c.copyFrom(s),i.Intersection=n.Intersection.Hit,!0):(c.copyFrom(s),i.Intersection=n.Intersection.Contain,!0);if(a=t.dot(o),a>0)return i.IntersectLinePos2(t,e,s,o,c)}return r.isPostiveZero(a)&&(i.Intersection=n.Intersection.parallel),!1}}i.Intersection=n.Intersection.None,e.default=i},adad:function(t,e,s){"use strict";var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const r=n(s("9a29"));let i=null,o=null,c=null;function a(){null==i&&(i=CoMath.createVec3(),o=CoMath.createVec3(),c=CoMath.createVec3())}class u{constructor(){this.uid=-1,this.pos=CoMath.createVec3(),this.tv=CoMath.createVec3(1)}static CalcPVSquaredDis2(t,e,s){a();let n=i;n.subVecsTo(s,e);const r=n.dot(t);return n.x-=r*t.x,n.y-=r*t.y,n.z-=r*t.z,n.getLengthSquared()}static CalcPVDis(t,e,s){return Math.sqrt(u.CalcPVSquaredDis2(t,e,s))}static CalcPVCloseV2(t,e,s,n){n.subVecsTo(s,t);const r=n.dot(e);n.x=r*e.x+t.x,n.y=r*e.y+t.y,n.z=r*e.z+t.z}static IntersectionCopSLV2(t,e,s,n,i){a();const u=CoMath.Vector3D;u.Cross(e,n,o),u.Cross(e,o,c),c.normalize(),r.default.IntersectLinePos2(c,c.dot(t),s,n,i)}static CalcTwoSLCloseV2(t,e,s,n,i){a();const u=CoMath.Vector3D;u.Cross(e,n,o),u.Cross(e,o,c),c.normalize(),r.default.IntersectLinePos2(c,c.dot(t),s,n,i),i.subtractBy(s);const l=i.dot(n);i.x=l*n.x+s.x,i.y=l*n.y+s.y,i.z=l*n.z+s.z}static CalcTwoSLDualCloseV2(t,e,s,n,i,u){a();const l=CoMath.Vector3D;l.Cross(e,n,o),l.Cross(e,o,c),c.normalize(),r.default.IntersectLinePos2(c,c.dot(t),s,n,i),u.copyFrom(s),i.subtractBy(t);let d=i.dot(e);i.x=d*e.x+t.x,i.y=d*e.y+t.y,i.z=d*e.z+t.z,u.subtractBy(i),d=u.dot(o),u.x=d*o.x+i.x,u.y=d*o.y+i.y,u.z=d*o.z+i.z}reset(){this.pos.setXYZ(0,0,0),this.tv.setXYZ(1,0,0)}update(){this.tv.normalize()}}e.default=u},c97d:function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});class n{constructor(){this.uid=-1,this.pos=CoMath.createVec3(),this.radius=0}setXYZ(t,e,s){this.pos.setXYZ(t,e,s)}reset(){this.pos.setXYZ(0,0,0),this.radius=0}update(){}}e.default=n},cbf6:function(t,e,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n=1e-6,r=-1e-6;function i(t){return t>r&&t<n}function o(t){return t<=r||t>=n}function c(t){return t>=n}function a(t){return t<=r}function u(t){return t<n}function l(t){return t>r}function d(t){return t>=0&&t<n}function h(t){return t<=0&&t>r}function f(t){return t>0}function y(t){return t<0}e.isZero=i,e.isNotZero=o,e.isGreaterPositiveZero=c,e.isLessNegativeZero=a,e.isLessPositiveZero=u,e.isGreaterNegativeZero=l,e.isPostiveZero=d,e.isNegativeZero=h,e.isGreaterRealZero=f,e.isLessRealZero=y},f8f1:function(t,e,s){"use strict";var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const r=s("cbf6"),i=n(s("9a29")),o=s("1101");let c=null;class a{constructor(){this.m_dis=0,this.uid=-1,this.pos=CoMath.createVec3(),this.nv=CoMath.createVec3(1),this.intersection=o.Intersection.None}setDistance(t){return this.m_dis=t,this.nv.normalize(),this.pos.copyFrom(this.nv).scaleBy(t),this}getDistance(){return this.m_dis}setXYZ(t,e,s){return this.pos.setXYZ(t,e,s),this.nv.normalize(),this.m_dis=this.nv.dot(this.pos),this}intersectLinePos(t,e){this.intersection=o.Intersection.None;let s=this.nv.dot(t.tv);if(r.isNotZero(s)){let n=this.nv.dot(t.pos)-this.m_dis;return e.x=1e5*t.tv.x+t.pos.x,e.y=1e5*t.tv.y+t.pos.y,e.z=1e5*t.tv.z+t.pos.z,s=this.nv.dot(e)-this.m_dis,s=n/(n-s),e.subtractBy(t.pos),e.scaleBy(s),e.addBy(t.pos),this.intersection=o.Intersection.Hit,!0}return s=this.nv.dot(t.pos)-this.m_dis,r.isZero(s)?(e.copyFrom(t.pos),this.intersection=o.Intersection.Contain,!0):(this.intersection=o.Intersection.parallel,!1)}intersectLinePos2(t,e,s){let n=i.default.IntersectLinePos2(this.nv,this.m_dis,t,e,s);return this.intersection=i.default.Intersection,n}intersectRayLinePos(t,e){this.intersection=o.Intersection.None;let s=this.nv.dot(t.pos)-this.m_dis;if(r.isGreaterPositiveZero(s)){if(s=this.nv.dot(t.tv),s<0)return this.intersectLinePos2(t.pos,t.tv,e)}else{if(!r.isLessNegativeZero(s))return s=this.nv.dot(t.tv),r.isNotZero(s)?(e.copyFrom(t.pos),this.intersection=o.Intersection.Hit,!0):(e.copyFrom(t.pos),this.intersection=o.Intersection.Contain,!0);if(s=this.nv.dot(t.tv),s>0)return this.intersectLinePos2(t.pos,t.tv,e)}return r.isPostiveZero(s)&&(this.intersection=o.Intersection.parallel),!1}intersectRayLinePos2(t,e,s){let n;this.intersection=o.Intersection.None;let i=this.nv.dot(t)-this.m_dis;if(r.isGreaterPositiveZero(i)){if(n=this.nv.dot(e),n<0)return this.intersectLinePos2(t,e,s)}else{if(!r.isLessNegativeZero(i))return n=this.nv.dot(e),r.isNotZero(n)?(s.copyFrom(t),this.intersection=o.Intersection.Hit,!0):(s.copyFrom(t),this.intersection=o.Intersection.Contain,!0);if(n=this.nv.dot(e),n>0)return this.intersectLinePos2(t,e,s)}return r.isPostiveZero(n)&&(this.intersection=o.Intersection.parallel),!1}containsPoint(t){let e=this.nv.dot(t)-this.m_dis;return r.isGreaterPositiveZero(e)?o.Intersection.Positive:r.isLessNegativeZero(e)?o.Intersection.Negative:o.Intersection.Hit}intersectSphere(t,e){this.intersection=o.Intersection.None;let s=!1,n=this.nv.dot(t)-this.m_dis;return r.isGreaterPositiveZero(n)?(s=n<=e,this.intersection=o.Intersection.Positive):r.isLessNegativeZero(n)?(s=-n<=e,this.intersection=o.Intersection.Negative):(this.intersection=o.Intersection.Hit,s=!0),s}intersectAABB(t,e){this.intersection=o.Intersection.None,null==c&&(c=CoMath.createVec3());let s=c;s.setXYZ(e.x,t.y,e.z);let n=this.containsPoint(s);return s.setXYZ(e.x,t.y,t.z),n+=this.containsPoint(s),s.setXYZ(t.x,t.y,t.z),n+=this.containsPoint(s),s.setXYZ(t.x,t.y,e.z),n+=this.containsPoint(s),s.setXYZ(e.x,e.y,e.z),n+=this.containsPoint(s),s.setXYZ(e.x,e.y,t.z),n+=this.containsPoint(s),s.setXYZ(t.x,e.y,t.z),n+=this.containsPoint(s),s.setXYZ(t.x,e.y,e.z),n+=this.containsPoint(s),this.intersection=n<-7?o.Intersection.Negative:n>7?o.Intersection.Positive:o.Intersection.Hit,n<8}intersectSphNegSpace(t,e){return Math.abs(this.nv.dot(t)-this.m_dis)<e}isEqual(t){let e=t.getDistance()-this.m_dis;return!!r.isZero(e)&&(e=t.nv.dot(this.nv),r.isPostiveZero(e))}isParallel(t){return r.isPostiveZero(t.nv.dot(this.nv))}reset(){this.nv.setXYZ(1,0,0),this.pos.setXYZ(0,0,0),this.m_dis=0,this.intersection=o.Intersection.None}update(){this.nv.normalize(),this.m_dis=this.nv.dot(this.pos)}}e.default=a},fae3:function(t,e,s){"use strict";s.r(e);s("1eb2");var n=s("52c2");for(var r in n)["default"].indexOf(r)<0&&function(t){s.d(e,t,(function(){return n[t]}))}(r)}})}));